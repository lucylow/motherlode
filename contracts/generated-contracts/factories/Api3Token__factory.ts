/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Api3Token, Api3TokenInterface } from "../Api3Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintingDestination",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burnerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "burnerStatus",
        type: "bool",
      },
    ],
    name: "BurnerStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minterAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "minterStatus",
        type: "bool",
      },
    ],
    name: "MinterStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "burnerAddress",
        type: "address",
      },
    ],
    name: "getBurnerStatus",
    outputs: [
      {
        internalType: "bool",
        name: "burnerStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minterAddress",
        type: "address",
      },
    ],
    name: "getMinterStatus",
    outputs: [
      {
        internalType: "bool",
        name: "minterStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "burnerStatus",
        type: "bool",
      },
    ],
    name: "updateBurnerStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minterAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "minterStatus",
        type: "bool",
      },
    ],
    name: "updateMinterStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001536380380620015368339810160408190526200003491620003a3565b6040805180820182526004808252634150493360e01b6020808401828152855180870190965292855284015281519192916200007391600391620002e0565b50805162000089906004906020840190620002e0565b505050620000a6620000a0620000d060201b60201c565b620000d4565b620000b18262000126565b620000c8816a52b7d2dcc80cd2e4000000620001fb565b50506200043c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03163314620001865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200017d565b620001f881620000d4565b50565b6001600160a01b038216620002535760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200017d565b8060026000828254620002679190620003da565b90915550506001600160a01b0382166000908152602081905260408120805483929062000296908490620003da565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620002ee90620003ff565b90600052602060002090601f0160209004810192826200031257600085556200035d565b82601f106200032d57805160ff19168380011785556200035d565b828001600101855582156200035d579182015b828111156200035d57825182559160200191906001019062000340565b506200036b9291506200036f565b5090565b5b808211156200036b576000815560010162000370565b80516001600160a01b03811681146200039e57600080fd5b919050565b60008060408385031215620003b6578182fd5b620003c18362000386565b9150620003d16020840162000386565b90509250929050565b60008219821115620003fa57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200041457607f821691505b602082108114156200043657634e487b7160e01b600052602260045260246000fd5b50919050565b6110ea806200044c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063bbb30c5d11610071578063bbb30c5d14610287578063d37cd55d146102b3578063dd62ed3e146102c6578063efc8f3c8146102ff578063f2fde38b1461031257600080fd5b80638da5cb5b1461021257806395d89b411461022d578063a457c2d714610235578063a9059cbb14610248578063b168dc5b1461025b57600080fd5b806339509351116100f457806339509351146101a657806340c10f19146101b957806342966c68146101ce57806370a08231146101e1578063715018a61461020a57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b610139610325565b6040516101469190610fac565b60405180910390f35b61016261015d366004610f51565b6103b7565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610eed565b6103cd565b60405160128152602001610146565b6101626101b4366004610f51565b61047c565b6101cc6101c7366004610f51565b6104b8565b005b6101cc6101dc366004610f94565b610525565b6101766101ef366004610e9a565b6001600160a01b031660009081526020819052604090205490565b6101cc610591565b6005546040516001600160a01b039091168152602001610146565b610139610603565b610162610243366004610f51565b610612565b610162610256366004610f51565b6106ab565b610162610269366004610e9a565b6001600160a01b031660009081526007602052604090205460ff1690565b610162610295366004610e9a565b6001600160a01b031660009081526006602052604090205460ff1690565b6101cc6102c1366004610f7a565b6106b8565b6101766102d4366004610ebb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cc61030d366004610f28565b610773565b6101cc610320366004610e9a565b61086b565b60606003805461033490611063565b80601f016020809104026020016040519081016040528092919081815260200182805461036090611063565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b5050505050905090565b60006103c4338484610903565b50600192915050565b60006103da848484610a28565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104645760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104718533858403610903565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103c49185906104b3908690611034565b610903565b3360009081526006602052604090205460ff166105175760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206d696e746572732061726520616c6c6f77656420746f206d696e74604482015260640161045b565b6105218282610bf7565b5050565b3360009081526007602052604090205460ff166105845760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206275726e6572732061726520616c6c6f77656420746f206275726e604482015260640161045b565b61058e3382610cd6565b50565b6005546001600160a01b031633146105bb5760405162461bcd60e51b815260040161045b90610fff565b60405162461bcd60e51b815260206004820152601d60248201527f4f776e6572736869702063616e6e6f742062652072656e6f756e636564000000604482015260640161045b565b60606004805461033490611063565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106945760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161045b565b6106a13385858403610903565b5060019392505050565b60006103c4338484610a28565b3360009081526007602052604090205460ff161515811515141561071e5760405162461bcd60e51b815260206004820152601b60248201527f496e7075742077696c6c206e6f74207570646174652073746174650000000000604482015260640161045b565b33600081815260076020908152604091829020805460ff191685151590811790915591519182527f5217d618731e650419668d9b99f95d662e37d7b87d4689cd98e92e1c176cc705910160405180910390a250565b6005546001600160a01b0316331461079d5760405162461bcd60e51b815260040161045b90610fff565b6001600160a01b03821660009081526006602052604090205460ff161515811515141561080c5760405162461bcd60e51b815260206004820152601b60248201527f496e7075742077696c6c206e6f74207570646174652073746174650000000000604482015260640161045b565b6001600160a01b038216600081815260066020908152604091829020805460ff191685151590811790915591519182527fd7f05487ae3002c125e5927b52b19827dd903ac7cb2e69c4f7f2fdbc17d1145c910160405180910390a25050565b6005546001600160a01b031633146108955760405162461bcd60e51b815260040161045b90610fff565b6001600160a01b0381166108fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045b565b61058e81610e1c565b6001600160a01b0383166109655760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045b565b6001600160a01b0382166109c65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610a8c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045b565b6001600160a01b038216610aee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045b565b6001600160a01b03831660009081526020819052604090205481811015610b665760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161045b565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b9d908490611034565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be991815260200190565b60405180910390a350505050565b6001600160a01b038216610c4d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045b565b8060026000828254610c5f9190611034565b90915550506001600160a01b03821660009081526020819052604081208054839290610c8c908490611034565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610d365760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161045b565b6001600160a01b03821660009081526020819052604090205481811015610daa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161045b565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610dd990849061104c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a1b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610e8557600080fd5b919050565b80358015158114610e8557600080fd5b600060208284031215610eab578081fd5b610eb482610e6e565b9392505050565b60008060408385031215610ecd578081fd5b610ed683610e6e565b9150610ee460208401610e6e565b90509250929050565b600080600060608486031215610f01578081fd5b610f0a84610e6e565b9250610f1860208501610e6e565b9150604084013590509250925092565b60008060408385031215610f3a578182fd5b610f4383610e6e565b9150610ee460208401610e8a565b60008060408385031215610f63578182fd5b610f6c83610e6e565b946020939093013593505050565b600060208284031215610f8b578081fd5b610eb482610e8a565b600060208284031215610fa5578081fd5b5035919050565b6000602080835283518082850152825b81811015610fd857858101830151858201604001528201610fbc565b81811115610fe95783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156110475761104761109e565b500190565b60008282101561105e5761105e61109e565b500390565b600181811c9082168061107757607f821691505b6020821081141561109857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202eebf06bcdfe2cd642845d22619a1f6457cd85280ea9740cbfdfaf4f0c8b78cd64736f6c63430008040033";

type Api3TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Api3TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Api3Token__factory extends ContractFactory {
  constructor(...args: Api3TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    contractOwner: string,
    mintingDestination: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Api3Token> {
    return super.deploy(
      contractOwner,
      mintingDestination,
      overrides || {}
    ) as Promise<Api3Token>;
  }
  getDeployTransaction(
    contractOwner: string,
    mintingDestination: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      contractOwner,
      mintingDestination,
      overrides || {}
    );
  }
  attach(address: string): Api3Token {
    return super.attach(address) as Api3Token;
  }
  connect(signer: Signer): Api3Token__factory {
    return super.connect(signer) as Api3Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Api3TokenInterface {
    return new utils.Interface(_abi) as Api3TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Api3Token {
    return new Contract(address, _abi, signerOrProvider) as Api3Token;
  }
}
